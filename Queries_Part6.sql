-- Note that DEPARTMENT_ID fk to table DEPARTMENTS
SELECT EMPLOYEE_ID , first_name, DEPARTMENT_ID
FROM EMPLOYEES;

SELECT DEPARTMENT_ID, DEPARTMENT_NAME 
FROM DEPARTMENTS;

-- If we try to display data from multiple tables without join, this called  cartesian product
SELECT 
EMPLOYEES.EMPLOYEE_ID , 
EMPLOYEES.FIRST_NAME, 
DEPARTMENTS.DEPARTMENT_ID, 
DEPARTMENTS.DEPARTMENT_NAME
FROM EMPLOYEES,
DEPARTMENTS
ORDER BY EMPLOYEE_ID;


-- Join will be like this and this called Equijoins or simple join or inner join

SELECT 
EMPLOYEES.EMPLOYEE_ID , 
EMPLOYEES.FIRST_NAME, 
EMPLOYEES.DEPARTMENT_ID, 
DEPARTMENTS.DEPARTMENT_NAME
FROM EMPLOYEES,
DEPARTMENTS
where EMPLOYEES.DEPARTMENT_ID=DEPARTMENTS.DEPARTMENT_ID
ORDER BY EMPLOYEE_ID;

-- Using additional conditions
SELECT 
EMPLOYEES.EMPLOYEE_ID , 
EMPLOYEES.FIRST_NAME, 
EMPLOYEES.DEPARTMENT_ID, 
DEPARTMENTS.DEPARTMENT_NAME
FROM EMPLOYEES,
DEPARTMENTS
WHERE EMPLOYEES.DEPARTMENT_ID=DEPARTMENTS.DEPARTMENT_ID
and EMPLOYEES.DEPARTMENT_ID >40
ORDER BY EMPLOYEE_ID;

-- Using table alias
SELECT 
EMP.EMPLOYEE_ID , 
EMP.FIRST_NAME, 
EMP.DEPARTMENT_ID, 
dept.DEPARTMENT_NAME
FROM EMPLOYEES EMP ,
DEPARTMENTS DEPT
WHERE emp.DEPARTMENT_ID=dept.DEPARTMENT_ID
ORDER BY EMPLOYEE_ID;

-- Join more than 2 tables
SELECT 
EMP.EMPLOYEE_ID , 
EMP.FIRST_NAME, 
emp.DEPARTMENT_ID, 
DEPT.DEPARTMENT_NAME,
DEPT.location_id,
loc.city
FROM 
EMPLOYEES EMP ,
DEPARTMENTS DEPT,
locations loc
WHERE EMP.DEPARTMENT_ID=DEPT.DEPARTMENT_ID
and dept.location_id=loc.location_id
ORDER BY EMPLOYEE_ID;


